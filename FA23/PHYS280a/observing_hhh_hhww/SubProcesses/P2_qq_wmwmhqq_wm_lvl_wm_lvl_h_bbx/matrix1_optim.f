      SUBROUTINE SMATRIX1(P,ANS)
C     
C     Generated by MadGraph5_aMC@NLO v. 3.5.1, 2023-07-11
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     MadGraph5_aMC@NLO for Madevent Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: d d > w- w- h u u QCD=0 QED<=5 @2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: s s > w- w- h c c QCD=0 QED<=5 @2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: d d > w- w- h u u QCD=0 QED<=5 @2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: s s > w- w- h c c QCD=0 QED<=5 @2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      Include 'genps.inc'
      Include 'maxconfigs.inc'
      Include 'nexternal.inc'
      Include 'maxamps.inc'
      INTEGER                 NCOMB         
      PARAMETER (             NCOMB=4)
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=288) 
      INTEGER    NDIAGS
      PARAMETER (NDIAGS=288) 
      INTEGER    THEL
      PARAMETER (THEL=2*NCOMB)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
C     
C     LOCAL VARIABLES 
C     
      INTEGER CONFSUB(MAXSPROC,LMAXCONFIGS)
      INCLUDE 'config_subproc_map.inc'
      INTEGER NHEL(NEXTERNAL,NCOMB)
      REAL*8 T
      REAL*8 R,SUMHEL,TS(NCOMB)
      INTEGER I,IDEN
      INTEGER JC(NEXTERNAL),II
      REAL*8 XTOT
      INTEGER  J, JJ

      double precision get_channel_cut
      external get_channel_cut

C     
C     GLOBAL VARIABLES
C     
      DOUBLE PRECISION AMP2(MAXAMPS), JAMP2(0:MAXFLOW)
      COMMON/TO_AMPS/  AMP2,       JAMP2


C     
C     INFORMATION TO WRITE THE HELICITY IN THE EVENT --not memory
C      efficient--
C     
      CHARACTER*101         HEL_BUFF
      COMMON/TO_HELICITY/  HEL_BUFF

      INTEGER NB_SPIN_STATE_in(2)
      common /nb_hel_state/ nb_spin_state_in

      REAL*8 POL(2)

      COMMON/TO_POLARIZATION/ POL
      double precision tmin_for_channel
      integer sde_strat    !  1 means standard single diagram enhancement strategy,
C     2 means approximation by the	denominator of the propagator
      common/TO_CHANNEL_STRAT/tmin_for_channel,	sde_strat

      INTEGER          ISUM_HEL
      LOGICAL                    MULTI_CHANNEL
      COMMON/TO_MATRIX/ISUM_HEL, MULTI_CHANNEL
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      COMMON/TO_MCONFIGS/MAPCONFIG, ICONFIG
      INTEGER SUBDIAG(MAXSPROC),IB(2)
      COMMON/TO_SUB_DIAG/SUBDIAG,IB
      
      DATA (NHEL(I,1),I=1,10) /-1,-1,-1, 1,-1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,2),I=1,10) /-1,-1,-1, 1,-1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,3),I=1,10) /-1,-1,-1, 1,-1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,4),I=1,10) /-1,-1,-1, 1,-1, 1, 1,-1,-1,-1/
      DATA IDEN/144/

C     ----------
C     BEGIN CODE
C     ----------

      DO I=1,NEXTERNAL
        JC(I) = +1
      ENDDO

      IF (multi_channel) THEN
        DO I=1,NDIAGS
          AMP2(I)=0D0
        ENDDO
        JAMP2(0)=2
        DO I=1,INT(JAMP2(0))
          JAMP2(I)=0D0
        ENDDO
      ENDIF
      ANS = 0D0
      WRITE(HEL_BUFF,'(20I5)') (0,I=1,NEXTERNAL)
C     Kiran please check if you need this:    
      DO I=1,NCOMB
        TS(I)=0d0
      ENDDO

      call MATRIX1(P ,JC(1), TS)
      DO I=1,NCOMB     
        T=TS(I)  
        DO JJ=1,nincoming
          IF(POL(JJ).NE.1d0.AND.NHEL(JJ,I).EQ.INT(SIGN(1d0,POL(JJ))))
     $      THEN
            T=T*ABS(POL(JJ))*NB_SPIN_STATE_IN(JJ)/2d0    !  NB_SPIN_STATE(JJ)/2d0 is added for polarised beam
          ELSE IF(POL(JJ).NE.1d0)THEN
            T=T*(2d0-ABS(POL(JJ)))*NB_SPIN_STATE_IN(JJ)/2d0
          ENDIF
        ENDDO
        ANS=ANS+DABS(T)
        TS(I)=T
      ENDDO

      IF (ANS.ne.0d0) THEN
        CALL RANMAR(R)
        SUMHEL=0d0
        DO I=1,NCOMB
          SUMHEL=SUMHEL+DABS(TS(I))/ANS
          IF(R.LT.SUMHEL)THEN
            WRITE(HEL_BUFF,'(20i5)')(NHEL(II,I),II=1,NEXTERNAL)
C           Set right sign for ANS, based on sign of chosen helicity
            ANS=DSIGN(ANS,TS(I))
            GOTO 10
          ENDIF
        ENDDO
 10     CONTINUE   
      ENDIF
      IF (MULTI_CHANNEL) THEN
        XTOT=0D0
        DO I=1,LMAXCONFIGS
          J = CONFSUB(1, I)
          if (J.ne.0)then
            if (sde_strat.eq.1)then
              AMP2(J) = AMP2(J) * GET_CHANNEL_CUT(P, I)
            else
              AMP2(J) = GET_CHANNEL_CUT(P, I)
            endif
            XTOT=XTOT+AMP2(J)

          endif
        ENDDO
        IF (XTOT.NE.0D0) THEN
          ANS=ANS*AMP2(SUBDIAG(1))/XTOT
        ELSE IF(ANS.ne.0d0) THEN
          write(*,*) 'Problem in the multi-channeling. All amp2 are'
     $     //' zero but not the total matrix-element'
          stop 1
        ENDIF
      ENDIF
      ANS=ANS/DBLE(IDEN)
      END


      Subroutine  MATRIX1(P,IC, TS)
C     
C     Generated by MadGraph5_aMC@NLO v. 3.5.1, 2023-07-11
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: d d > w- w- h u u QCD=0 QED<=5 @2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: s s > w- w- h c c QCD=0 QED<=5 @2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: w- > e- ve~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: d d > w- w- h u u QCD=0 QED<=5 @2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     Process: s s > w- w- h c c QCD=0 QED<=5 @2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: w- > mu- vm~ WEIGHTED<=2
C     *   Decay: h > b b~ WEIGHTED<=2
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=288) 
      include 'genps.inc'
      include 'nexternal.inc'
      include 'maxamps.inc'
      INTEGER    NWAVEFUNCS,     NCOLOR
      PARAMETER (NWAVEFUNCS=224, NCOLOR=2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
      INTEGER NAMPSO, NSQAMPSO
      PARAMETER (NAMPSO=1, NSQAMPSO=1)
      LOGICAL CHOSEN_SO_CONFIGS(NSQAMPSO)
      DATA CHOSEN_SO_CONFIGS/.TRUE./
      SAVE CHOSEN_SO_CONFIGS
      INTEGER                 NCOMB         
      PARAMETER (             NCOMB=4)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      REAL*8 TS(NCOMB)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J,M,N,K
      COMPLEX*16 ZTEMP,TMP_JAMP(0)
      COMPLEX*16 TMP(6)
      REAL*8 CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NCOMB,NGRAPHS), JAMP(NCOLOR,NAMPSO)
      COMPLEX*16 W(6,NWAVEFUNCS)
C     Needed for v4 models
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0d0, 0d0), (1d0, 0d0)/

      double precision fk_mdl_WH 
      double precision fk_ZERO 
      double precision fk_mdl_WW 
      double precision fk_mdl_WZ 
      save fk_mdl_WH 
      save fk_ZERO 
      save fk_mdl_WW 
      save fk_mdl_WZ 

      logical first
      data first /.true./
      save first
C     
C     FUNCTION
C     
      INTEGER SQSOINDEX1

C     
C     GLOBAL VARIABLES
C     
      Double Precision amp2(maxamps), jamp2(0:maxflow)
      common/to_amps/  amp2,       jamp2
      include 'coupl.inc'

      double precision tmin_for_channel
      integer sde_strat    !  1 means standard single diagram enhancement strategy,
C     2 means approximation by the	denominator of the propagator
      common/TO_CHANNEL_STRAT/tmin_for_channel,	sde_strat

      double precision small_width_treatment
      common/narrow_width/small_width_treatment
C     
C     COLOR DATA
C     
      DATA (CF(i,  1),i=  1,  2) /2.700000000000000d+01
     $ ,9.000000000000000d+00/
C     1 T(7,8) T(9,1) T(10,2)
      DATA (CF(i,  2),i=  1,  2) /9.000000000000000d+00
     $ ,2.700000000000000d+01/
C     1 T(7,8) T(9,2) T(10,1)
C     ----------
C     BEGIN CODE
C     ----------
      if (first) then
        first=.false.
        IF(ZERO.ne.0d0) fk_ZERO = SIGN(MAX(ABS(ZERO), ABS(ZERO
     $   *small_width_treatment)), ZERO)
        IF(ZERO.ne.0d0) fk_ZERO = SIGN(MAX(ABS(ZERO), ABS(mdl_MB
     $   *small_width_treatment)), ZERO)
        IF(mdl_WH.ne.0d0) fk_mdl_WH = SIGN(MAX(ABS(mdl_WH), ABS(mdl_MH
     $   *small_width_treatment)), mdl_WH)
        IF(mdl_WW.ne.0d0) fk_mdl_WW = SIGN(MAX(ABS(mdl_WW), ABS(mdl_MW
     $   *small_width_treatment)), mdl_WW)
        IF(mdl_WZ.ne.0d0) fk_mdl_WZ = SIGN(MAX(ABS(mdl_WZ), ABS(mdl_MZ
     $   *small_width_treatment)), mdl_WZ)
      endif
      AMP(:,:) = (0d0,0d0)
            CALL IXXXXX(P(0,1),ZERO,-1,+1*IC(1),W(1,1))  !  count 116
      CALL IXXXXX(P(0,2),ZERO,-1,+1*IC(2),W(1,2))  !  count 164
      CALL OXXXXX(P(0,3),ZERO,-1,+1*IC(3),W(1,3))  !  count 1
      CALL IXXXXX(P(0,4),ZERO,+1,-1*IC(4),W(1,4))  !  count 1
      CALL FFV2_3(W(1,4),W(1,3),GC_100,MDL_MW,FK_MDL_WW,W(1,5))  !  count 198
      CALL OXXXXX(P(0,5),ZERO,-1,+1*IC(5),W(1,6))  !  count 1
      CALL IXXXXX(P(0,6),ZERO,+1,-1*IC(6),W(1,7))  !  count 1
      CALL FFV2_3(W(1,7),W(1,6),GC_100,MDL_MW,FK_MDL_WW,W(1,8))  !  count 198
      CALL OXXXXX(P(0,7),MDL_MB,+1,+1*IC(7),W(1,9))  !  count 2
      CALL OXXXXX(P(0,7),MDL_MB,-1,+1*IC(7),W(1,10))  !  count 2
      CALL IXXXXX(P(0,8),MDL_MB,+1,-1*IC(8),W(1,11))  !  count 2
      CALL IXXXXX(P(0,8),MDL_MB,-1,-1*IC(8),W(1,12))  !  count 2
      CALL FFS4_3(W(1,11),W(1,9),GC_83,MDL_MH,FK_MDL_WH,W(1,13))  !  count 60
      CALL FFS4_3(W(1,11),W(1,10),GC_83,MDL_MH,FK_MDL_WH,W(1,14))  !  count 60
      CALL FFS4_3(W(1,12),W(1,9),GC_83,MDL_MH,FK_MDL_WH,W(1,15))  !  count 60
      CALL FFS4_3(W(1,12),W(1,10),GC_83,MDL_MH,FK_MDL_WH,W(1,16))  !  count 60
      CALL OXXXXX(P(0,9),ZERO,-1,+1*IC(9),W(1,17))  !  count 148
      CALL OXXXXX(P(0,10),ZERO,-1,+1*IC(10),W(1,18))  !  count 148
      CALL FFV2_2(W(1,1),W(1,5),GC_100,ZERO,FK_ZERO,W(1,19))  !  count 8
      CALL FFV2_2(W(1,2),W(1,8),GC_100,ZERO,FK_ZERO,W(1,20))  !  count 30
      CALL FFV2_5_3(W(1,19),W(1,17),-GC_50,GC_58,MDL_MZ,ZERO,W(1,21))  !  count 28
      CALL FFV2_5_3(W(1,20),W(1,18),-GC_50,GC_58,MDL_MZ,ZERO,W(1,22))  !  count 24
      CALL VVS1P1N_3(W(1,21), W(1,22), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,1))  !  count 1
      CALL FFV2_5_3(W(1,19),W(1,18),-GC_50,GC_58,MDL_MZ,ZERO,W(1,23))  !  count 28
      CALL FFV2_5_3(W(1,20),W(1,17),-GC_50,GC_58,MDL_MZ,ZERO,W(1,24))  !  count 24
      CALL VVS1P1N_3(W(1,23), W(1,24), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,2))  !  count 1
      CALL FFV2_3(W(1,2),W(1,17),GC_100,MDL_MW,ZERO,W(1,25))  !  count 140
      CALL VVV1_3(W(1,8),W(1,25),GC_53,MDL_MZ,ZERO,W(1,26))  !  count 24
      CALL VVS1P1N_3(W(1,23), W(1,26), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,3))  !  count 1
      CALL FFV1P0_3(W(1,19),W(1,18),GC_2,ZERO,FK_ZERO,W(1,27))  !  count 16
      CALL VVS1_1(W(1,25),W(1,13),GC_72,MDL_MW,ZERO,W(1,28))  !  count 14
      CALL VVS1_1(W(1,25),W(1,14),GC_72,MDL_MW,ZERO,W(1,29))  !  count 14
      CALL VVS1_1(W(1,25),W(1,15),GC_72,MDL_MW,ZERO,W(1,30))  !  count 14
      CALL VVS1_1(W(1,25),W(1,16),GC_72,MDL_MW,ZERO,W(1,31))  !  count 14
      CALL VVV1P1N_3(W(1,27), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,4))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,23), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,5))  !  count 1
      CALL VVS1_2(W(1,8),W(1,13),GC_72,MDL_MW,FK_MDL_WW,W(1,32))  !  count 32
      CALL VVS1_2(W(1,8),W(1,14),GC_72,MDL_MW,FK_MDL_WW,W(1,33))  !  count 32
      CALL VVS1_2(W(1,8),W(1,15),GC_72,MDL_MW,FK_MDL_WW,W(1,34))  !  count 32
      CALL VVS1_2(W(1,8),W(1,16),GC_72,MDL_MW,FK_MDL_WW,W(1,35))  !  count 32
      CALL FFV2_2(W(1,19),W(1,25),GC_100,ZERO,FK_ZERO,W(1,36))  !  count 4
      CALL FFV2P1N_3(W(1,36), W(1,18), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,6))  !  count 1
      CALL VVV1P1N_2(W(1,27), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,7))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,23), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,8))  !  count 1
      CALL FFV2_1(W(1,18),W(1,8),GC_100,ZERO,FK_ZERO,W(1,37))  !  count 22
      CALL FFV2_3(W(1,19),W(1,37),GC_100,MDL_MW,ZERO,W(1,38))  !  count 4
      CALL VVS1P1N_3(W(1,38), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,9))  !  count 1
      CALL FFV2_3(W(1,2),W(1,18),GC_100,MDL_MW,ZERO,W(1,39))  !  count 140
      CALL VVV1_3(W(1,8),W(1,39),GC_53,MDL_MZ,ZERO,W(1,40))  !  count 24
      CALL VVS1P1N_3(W(1,21), W(1,40), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,10))  !  count 1
      CALL FFV1P0_3(W(1,19),W(1,17),GC_2,ZERO,FK_ZERO,W(1,41))  !  count 16
      CALL VVS1_1(W(1,39),W(1,13),GC_72,MDL_MW,ZERO,W(1,42))  !  count 14
      CALL VVS1_1(W(1,39),W(1,14),GC_72,MDL_MW,ZERO,W(1,43))  !  count 14
      CALL VVS1_1(W(1,39),W(1,15),GC_72,MDL_MW,ZERO,W(1,44))  !  count 14
      CALL VVS1_1(W(1,39),W(1,16),GC_72,MDL_MW,ZERO,W(1,45))  !  count 14
      CALL VVV1P1N_3(W(1,41), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,11))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,21), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,12))  !  count 1
      CALL FFV2_2(W(1,19),W(1,39),GC_100,ZERO,FK_ZERO,W(1,46))  !  count 4
      CALL FFV2P1N_3(W(1,46), W(1,17), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,13))  !  count 1
      CALL VVV1P1N_2(W(1,41), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,14))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,21), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,15))  !  count 1
      CALL FFV2_1(W(1,17),W(1,8),GC_100,ZERO,FK_ZERO,W(1,47))  !  count 22
      CALL FFV2_3(W(1,19),W(1,47),GC_100,MDL_MW,ZERO,W(1,48))  !  count 4
      CALL VVS1P1N_3(W(1,48), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,16))  !  count 1
      CALL FFV2_2(W(1,2),W(1,32),GC_100,ZERO,FK_ZERO,W(1,49))  !  count 12
      CALL FFV2_2(W(1,2),W(1,33),GC_100,ZERO,FK_ZERO,W(1,50))  !  count 12
      CALL FFV2_2(W(1,2),W(1,34),GC_100,ZERO,FK_ZERO,W(1,51))  !  count 12
      CALL FFV2_2(W(1,2),W(1,35),GC_100,ZERO,FK_ZERO,W(1,52))  !  count 12
      CALL FFV1P1N_1(W(1,18), W(1,41), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,17))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,21), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,18))  !  count 1
      CALL FFV2_1(W(1,18),W(1,32),GC_100,ZERO,FK_ZERO,W(1,53))  !  count 12
      CALL FFV2_1(W(1,18),W(1,33),GC_100,ZERO,FK_ZERO,W(1,54))  !  count 12
      CALL FFV2_1(W(1,18),W(1,34),GC_100,ZERO,FK_ZERO,W(1,55))  !  count 12
      CALL FFV2_1(W(1,18),W(1,35),GC_100,ZERO,FK_ZERO,W(1,56))  !  count 12
      CALL FFV1P1N_2(W(1,2), W(1,41), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,19))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,21), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,20))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,27), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,21))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,23), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,22))  !  count 1
      CALL FFV2_1(W(1,17),W(1,32),GC_100,ZERO,FK_ZERO,W(1,57))  !  count 12
      CALL FFV2_1(W(1,17),W(1,33),GC_100,ZERO,FK_ZERO,W(1,58))  !  count 12
      CALL FFV2_1(W(1,17),W(1,34),GC_100,ZERO,FK_ZERO,W(1,59))  !  count 12
      CALL FFV2_1(W(1,17),W(1,35),GC_100,ZERO,FK_ZERO,W(1,60))  !  count 12
      CALL FFV1P1N_2(W(1,2), W(1,27), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,23))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,23), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,24))  !  count 1
      CALL FFV2_3_3(W(1,2),W(1,47),GC_50,GC_58,MDL_MZ,ZERO,W(1,61))  !  count 24
      CALL VVS1P1N_3(W(1,23), W(1,61), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,25))  !  count 1
      CALL FFV2_3_3(W(1,2),W(1,37),GC_50,GC_58,MDL_MZ,ZERO,W(1,62))  !  count 24
      CALL VVS1P1N_3(W(1,21), W(1,62), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,26))  !  count 1
      CALL FFV2_2(W(1,1),W(1,8),GC_100,ZERO,FK_ZERO,W(1,63))  !  count 8
      CALL FFV2_2(W(1,2),W(1,5),GC_100,ZERO,FK_ZERO,W(1,64))  !  count 30
      CALL FFV2_5_3(W(1,63),W(1,17),-GC_50,GC_58,MDL_MZ,ZERO,W(1,65))  !  count 28
      CALL FFV2_5_3(W(1,64),W(1,18),-GC_50,GC_58,MDL_MZ,ZERO,W(1,66))  !  count 24
      CALL VVS1P1N_3(W(1,65), W(1,66), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,27))  !  count 1
      CALL FFV2_5_3(W(1,63),W(1,18),-GC_50,GC_58,MDL_MZ,ZERO,W(1,67))  !  count 28
      CALL FFV2_5_3(W(1,64),W(1,17),-GC_50,GC_58,MDL_MZ,ZERO,W(1,68))  !  count 24
      CALL VVS1P1N_3(W(1,67), W(1,68), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,28))  !  count 1
      CALL VVV1_3(W(1,5),W(1,25),GC_53,MDL_MZ,ZERO,W(1,69))  !  count 24
      CALL VVS1P1N_3(W(1,67), W(1,69), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,29))  !  count 1
      CALL FFV1P0_3(W(1,63),W(1,18),GC_2,ZERO,FK_ZERO,W(1,70))  !  count 16
      CALL VVV1P1N_3(W(1,70), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,30))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,67), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,31))  !  count 1
      CALL VVS1_2(W(1,5),W(1,13),GC_72,MDL_MW,FK_MDL_WW,W(1,71))  !  count 32
      CALL VVS1_2(W(1,5),W(1,14),GC_72,MDL_MW,FK_MDL_WW,W(1,72))  !  count 32
      CALL VVS1_2(W(1,5),W(1,15),GC_72,MDL_MW,FK_MDL_WW,W(1,73))  !  count 32
      CALL VVS1_2(W(1,5),W(1,16),GC_72,MDL_MW,FK_MDL_WW,W(1,74))  !  count 32
      CALL FFV2_2(W(1,63),W(1,25),GC_100,ZERO,FK_ZERO,W(1,75))  !  count 4
      CALL FFV2P1N_3(W(1,75), W(1,18), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,32))  !  count 1
      CALL VVV1P1N_2(W(1,70), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,33))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,67), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,34))  !  count 1
      CALL FFV2_1(W(1,18),W(1,5),GC_100,ZERO,FK_ZERO,W(1,76))  !  count 22
      CALL FFV2_3(W(1,63),W(1,76),GC_100,MDL_MW,ZERO,W(1,77))  !  count 4
      CALL VVS1P1N_3(W(1,77), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,35))  !  count 1
      CALL VVV1_3(W(1,5),W(1,39),GC_53,MDL_MZ,ZERO,W(1,78))  !  count 24
      CALL VVS1P1N_3(W(1,65), W(1,78), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,36))  !  count 1
      CALL FFV1P0_3(W(1,63),W(1,17),GC_2,ZERO,FK_ZERO,W(1,79))  !  count 16
      CALL VVV1P1N_3(W(1,79), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,37))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,65), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,38))  !  count 1
      CALL FFV2_2(W(1,63),W(1,39),GC_100,ZERO,FK_ZERO,W(1,80))  !  count 4
      CALL FFV2P1N_3(W(1,80), W(1,17), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,39))  !  count 1
      CALL VVV1P1N_2(W(1,79), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,40))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,65), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,41))  !  count 1
      CALL FFV2_1(W(1,17),W(1,5),GC_100,ZERO,FK_ZERO,W(1,81))  !  count 22
      CALL FFV2_3(W(1,63),W(1,81),GC_100,MDL_MW,ZERO,W(1,82))  !  count 4
      CALL VVS1P1N_3(W(1,82), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,42))  !  count 1
      CALL FFV2_2(W(1,2),W(1,71),GC_100,ZERO,FK_ZERO,W(1,83))  !  count 12
      CALL FFV2_2(W(1,2),W(1,72),GC_100,ZERO,FK_ZERO,W(1,84))  !  count 12
      CALL FFV2_2(W(1,2),W(1,73),GC_100,ZERO,FK_ZERO,W(1,85))  !  count 12
      CALL FFV2_2(W(1,2),W(1,74),GC_100,ZERO,FK_ZERO,W(1,86))  !  count 12
      CALL FFV1P1N_1(W(1,18), W(1,79), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,43))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,65), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,44))  !  count 1
      CALL FFV2_1(W(1,18),W(1,71),GC_100,ZERO,FK_ZERO,W(1,87))  !  count 12
      CALL FFV2_1(W(1,18),W(1,72),GC_100,ZERO,FK_ZERO,W(1,88))  !  count 12
      CALL FFV2_1(W(1,18),W(1,73),GC_100,ZERO,FK_ZERO,W(1,89))  !  count 12
      CALL FFV2_1(W(1,18),W(1,74),GC_100,ZERO,FK_ZERO,W(1,90))  !  count 12
      CALL FFV1P1N_2(W(1,2), W(1,79), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,45))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,65), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,46))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,70), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,47))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,67), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,48))  !  count 1
      CALL FFV2_1(W(1,17),W(1,71),GC_100,ZERO,FK_ZERO,W(1,91))  !  count 12
      CALL FFV2_1(W(1,17),W(1,72),GC_100,ZERO,FK_ZERO,W(1,92))  !  count 12
      CALL FFV2_1(W(1,17),W(1,73),GC_100,ZERO,FK_ZERO,W(1,93))  !  count 12
      CALL FFV2_1(W(1,17),W(1,74),GC_100,ZERO,FK_ZERO,W(1,94))  !  count 12
      CALL FFV1P1N_2(W(1,2), W(1,70), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,49))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,67), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,50))  !  count 1
      CALL FFV2_3_3(W(1,2),W(1,81),GC_50,GC_58,MDL_MZ,ZERO,W(1,95))  !  count 24
      CALL VVS1P1N_3(W(1,67), W(1,95), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,51))  !  count 1
      CALL FFV2_3_3(W(1,2),W(1,76),GC_50,GC_58,MDL_MZ,ZERO,W(1,96))  !  count 24
      CALL VVS1P1N_3(W(1,65), W(1,96), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,52))  !  count 1
      CALL FFV2_3(W(1,1),W(1,17),GC_100,MDL_MW,ZERO,W(1,97))  !  count 55
      CALL VVV1_3(W(1,8),W(1,97),GC_53,MDL_MZ,ZERO,W(1,98))  !  count 28
      CALL VVS1P1N_3(W(1,98), W(1,66), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,53))  !  count 1
      CALL VVS1_1(W(1,97),W(1,13),GC_72,MDL_MW,ZERO,W(1,99))  !  count 17
      CALL VVS1_1(W(1,97),W(1,14),GC_72,MDL_MW,ZERO,W(1,100))  !  count 17
      CALL VVS1_1(W(1,97),W(1,15),GC_72,MDL_MW,ZERO,W(1,101))  !  count 17
      CALL VVS1_1(W(1,97),W(1,16),GC_72,MDL_MW,ZERO,W(1,102))  !  count 17
      CALL FFV1P0_3(W(1,64),W(1,18),GC_2,ZERO,FK_ZERO,W(1,103))  !  count 12
      CALL VVV1P1N_3(W(1,103), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,54))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,66), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,55))  !  count 1
      CALL FFV2_2(W(1,64),W(1,97),GC_100,ZERO,FK_ZERO,W(1,104))  !  count 4
      CALL FFV2P1N_3(W(1,104), W(1,18), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,56))  !  count 1
      CALL VVV1P0_1(W(1,32),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,105))  !  count 3
      CALL VVV1P0_1(W(1,33),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,106))  !  count 3
      CALL VVV1P0_1(W(1,34),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,107))  !  count 3
      CALL VVV1P0_1(W(1,35),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,108))  !  count 3
      CALL FFV1P1N_3(W(1,64), W(1,18), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/105,106,107,108/),
     & TMP, W, AMP(1,57))  !  count 1
      CALL VVV1_3(W(1,32),W(1,97),GC_53,MDL_MZ,ZERO,W(1,109))  !  count 3
      CALL VVV1_3(W(1,33),W(1,97),GC_53,MDL_MZ,ZERO,W(1,110))  !  count 3
      CALL VVV1_3(W(1,34),W(1,97),GC_53,MDL_MZ,ZERO,W(1,111))  !  count 3
      CALL VVV1_3(W(1,35),W(1,97),GC_53,MDL_MZ,ZERO,W(1,112))  !  count 3
      CALL FFV2_5P1N_3(W(1,64), W(1,18), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/109,110,111,112/),
     & TMP, W, AMP(1,58))  !  count 1
      CALL FFV2P1N_3(W(1,64), W(1,37), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,59))  !  count 1
      CALL VVV1_3(W(1,5),W(1,97),GC_53,MDL_MZ,ZERO,W(1,113))  !  count 28
      CALL VVS1P1N_3(W(1,113), W(1,22), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,60))  !  count 1
      CALL FFV1P0_3(W(1,20),W(1,18),GC_2,ZERO,FK_ZERO,W(1,114))  !  count 12
      CALL VVV1P1N_3(W(1,114), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,61))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,22), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,62))  !  count 1
      CALL FFV2_2(W(1,20),W(1,97),GC_100,ZERO,FK_ZERO,W(1,115))  !  count 4
      CALL FFV2P1N_3(W(1,115), W(1,18), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,63))  !  count 1
      CALL VVV1P0_1(W(1,71),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,116))  !  count 3
      CALL VVV1P0_1(W(1,72),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,117))  !  count 3
      CALL VVV1P0_1(W(1,73),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,118))  !  count 3
      CALL VVV1P0_1(W(1,74),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,119))  !  count 3
      CALL FFV1P1N_3(W(1,20), W(1,18), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/116,117,118,119/),
     & TMP, W, AMP(1,64))  !  count 1
      CALL VVV1_3(W(1,71),W(1,97),GC_53,MDL_MZ,ZERO,W(1,120))  !  count 3
      CALL VVV1_3(W(1,72),W(1,97),GC_53,MDL_MZ,ZERO,W(1,121))  !  count 3
      CALL VVV1_3(W(1,73),W(1,97),GC_53,MDL_MZ,ZERO,W(1,122))  !  count 3
      CALL VVV1_3(W(1,74),W(1,97),GC_53,MDL_MZ,ZERO,W(1,123))  !  count 3
      CALL FFV2_5P1N_3(W(1,20), W(1,18), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/120,121,122,123/),
     & TMP, W, AMP(1,65))  !  count 1
      CALL FFV2P1N_3(W(1,20), W(1,76), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,66))  !  count 1
      CALL VVS1_3(W(1,5),W(1,97),GC_72,MDL_MH,ZERO,W(1,124))  !  count 16
      CALL VVS1_3(W(1,8),W(1,39),GC_72,MDL_MH,ZERO,W(1,125))  !  count 8
      CALL SSS1P1N_3(W(1,124), W(1,125), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,67))  !  count 1
      CALL VVS1P1N_3(W(1,113), W(1,40), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,68))  !  count 1
      CALL VVV1P0_1(W(1,5),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,126))  !  count 16
      CALL VVV1P1N_3(W(1,126), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,69))  !  count 1
      CALL VVS1P1N_2(W(1,8), W(1,124), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,70))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,113), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,71))  !  count 1
      CALL VVSS1P1N_3(W(1,8), W(1,39), W(1,124), GC_34, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,72))  !  count 1
      CALL VVS1_3(W(1,8),W(1,97),GC_72,MDL_MH,ZERO,W(1,127))  !  count 16
      CALL VVS1_3(W(1,5),W(1,39),GC_72,MDL_MH,ZERO,W(1,128))  !  count 8
      CALL SSS1P1N_3(W(1,127), W(1,128), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,73))  !  count 1
      CALL VVS1P1N_3(W(1,98), W(1,78), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,74))  !  count 1
      CALL VVV1P0_1(W(1,8),W(1,97),-GC_3,ZERO,FK_ZERO,W(1,129))  !  count 16
      CALL VVV1P1N_3(W(1,129), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,75))  !  count 1
      CALL VVS1P1N_2(W(1,5), W(1,127), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,76))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,98), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,77))  !  count 1
      CALL VVSS1P1N_3(W(1,5), W(1,39), W(1,127), GC_34, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,78))  !  count 1
      CALL VVV1P0_1(W(1,5),W(1,39),-GC_3,ZERO,FK_ZERO,W(1,130))  !  count 12
      CALL VVV1P1N_3(W(1,130), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,79))  !  count 1
      CALL VVS1P1N_2(W(1,8), W(1,128), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,80))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,78), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,81))  !  count 1
      CALL VVV1P0_1(W(1,8),W(1,39),-GC_3,ZERO,FK_ZERO,W(1,131))  !  count 12
      CALL VVV1P1N_3(W(1,131), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,82))  !  count 1
      CALL VVS1P1N_2(W(1,5), W(1,125), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,83))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,40), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,84))  !  count 1
      CALL VVVV2P1N_4(W(1,5), W(1,8), W(1,39), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,85))  !  count 1
      CALL VVVV2_3(W(1,5),W(1,8),W(1,97),GC_35,MDL_MW,ZERO,W(1,132))  !  count 4
      CALL VVS1P1N_3(W(1,132), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,86))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,97),W(1,13),GC_34,MDL_MH,ZERO,W(1,133))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,97),W(1,14),GC_34,MDL_MH,ZERO,W(1,134))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,97),W(1,15),GC_34,MDL_MH,ZERO,W(1,135))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,97),W(1,16),GC_34,MDL_MH,ZERO,W(1,136))  !  count 1
      CALL VVS1P1N_3(W(1,8), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/133,134,135,136/), 
     & TMP, W, AMP(1,87))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,97),W(1,13),GC_34,MDL_MH,ZERO,W(1,137))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,97),W(1,14),GC_34,MDL_MH,ZERO,W(1,138))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,97),W(1,15),GC_34,MDL_MH,ZERO,W(1,139))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,97),W(1,16),GC_34,MDL_MH,ZERO,W(1,140))  !  count 1
      CALL VVS1P1N_3(W(1,5), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/137,138,139,140/), 
     & TMP, W, AMP(1,88))  !  count 1
      CALL VVVV2P1N_1(W(1,8), W(1,97), W(1,39), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,89))  !  count 1
      CALL VVV1P1N_1(W(1,8), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/116,117,118,119/),
     & TMP, W, AMP(1,90))  !  count 1
      CALL VVS1_3(W(1,71),W(1,97),GC_72,MDL_MH,ZERO,W(1,141))  !  count 1
      CALL VVS1_3(W(1,72),W(1,97),GC_72,MDL_MH,ZERO,W(1,142))  !  count 1
      CALL VVS1_3(W(1,73),W(1,97),GC_72,MDL_MH,ZERO,W(1,143))  !  count 1
      CALL VVS1_3(W(1,74),W(1,97),GC_72,MDL_MH,ZERO,W(1,144))  !  count 1
      CALL VVS1P1N_3(W(1,8), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/141,142,143,144/), 
     & TMP, W, AMP(1,91))  !  count 1
      CALL VVV1P1N_3(W(1,8), W(1,39), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/120,121,122,123/),
     & TMP, W, AMP(1,92))  !  count 1
      CALL VVV1P1N_2(W(1,129), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,93))  !  count 1
      CALL VVS1P1N_1(W(1,39), W(1,127), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,94))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,98), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,95))  !  count 1
      CALL VVVV2P1N_2(W(1,5), W(1,97), W(1,39), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,96))  !  count 1
      CALL VVV1P1N_2(W(1,126), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,97))  !  count 1
      CALL VVS1P1N_1(W(1,39), W(1,124), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,98))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,113), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,99))  !  count 1
      CALL VVV1P1N_1(W(1,5), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/105,106,107,108/),
     & TMP, W, AMP(1,100))  !  count 1
      CALL VVS1_3(W(1,32),W(1,97),GC_72,MDL_MH,ZERO,W(1,145))  !  count 1
      CALL VVS1_3(W(1,33),W(1,97),GC_72,MDL_MH,ZERO,W(1,146))  !  count 1
      CALL VVS1_3(W(1,34),W(1,97),GC_72,MDL_MH,ZERO,W(1,147))  !  count 1
      CALL VVS1_3(W(1,35),W(1,97),GC_72,MDL_MH,ZERO,W(1,148))  !  count 1
      CALL VVS1P1N_3(W(1,5), W(1,39), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/145,146,147,148/), 
     & TMP, W, AMP(1,101))  !  count 1
      CALL VVV1P1N_3(W(1,5), W(1,39), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/109,110,111,112/),
     & TMP, W, AMP(1,102))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,129), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,103))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,98), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,104))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,129), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,105))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,98), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,106))  !  count 1
      CALL FFV1P1N_3(W(1,2), W(1,37), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/116,117,118,119/),
     & TMP, W, AMP(1,107))  !  count 1
      CALL FFV2_3P1N_3(W(1,2), W(1,37), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/120,121,122,123/),
     & TMP, W, AMP(1,108))  !  count 1
      CALL FFV2_1(W(1,37),W(1,97),GC_100,ZERO,FK_ZERO,W(1,149))  !  count 4
      CALL FFV2P1N_3(W(1,2), W(1,149), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,109))  !  count 1
      CALL VVS1P1N_3(W(1,98), W(1,96), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,110))  !  count 1
      CALL FFV1P0_3(W(1,2),W(1,76),GC_1,ZERO,FK_ZERO,W(1,150))  !  count 12
      CALL VVV1P1N_3(W(1,150), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,111))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,96), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,112))  !  count 1
      CALL FFV2_1(W(1,76),W(1,97),GC_100,ZERO,FK_ZERO,W(1,151))  !  count 4
      CALL FFV2P1N_3(W(1,2), W(1,151), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,113))  !  count 1
      CALL FFV1P1N_3(W(1,2), W(1,76), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/105,106,107,108/),
     & TMP, W, AMP(1,114))  !  count 1
      CALL FFV2_3P1N_3(W(1,2), W(1,76), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/109,110,111,112/),
     & TMP, W, AMP(1,115))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,126), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,116))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,113), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,117))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,126), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,118))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,113), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,119))  !  count 1
      CALL VVS1P1N_3(W(1,113), W(1,62), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,120))  !  count 1
      CALL FFV1P0_3(W(1,2),W(1,37),GC_1,ZERO,FK_ZERO,W(1,152))  !  count 12
      CALL VVV1P1N_3(W(1,152), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,121))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,62), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/99,100,101,102/),
     & TMP, W, AMP(1,122))  !  count 1
      CALL FFV2_3(W(1,1),W(1,18),GC_100,MDL_MW,ZERO,W(1,153))  !  count 55
      CALL VVV1_3(W(1,8),W(1,153),GC_53,MDL_MZ,ZERO,W(1,154))  !  count 28
      CALL VVS1P1N_3(W(1,154), W(1,68), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,123))  !  count 1
      CALL VVS1_1(W(1,153),W(1,13),GC_72,MDL_MW,ZERO,W(1,155))  !  count 17
      CALL VVS1_1(W(1,153),W(1,14),GC_72,MDL_MW,ZERO,W(1,156))  !  count 17
      CALL VVS1_1(W(1,153),W(1,15),GC_72,MDL_MW,ZERO,W(1,157))  !  count 17
      CALL VVS1_1(W(1,153),W(1,16),GC_72,MDL_MW,ZERO,W(1,158))  !  count 17
      CALL FFV1P0_3(W(1,64),W(1,17),GC_2,ZERO,FK_ZERO,W(1,159))  !  count 12
      CALL VVV1P1N_3(W(1,159), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,124))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,68), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,125))  !  count 1
      CALL FFV2_2(W(1,64),W(1,153),GC_100,ZERO,FK_ZERO,W(1,160))  !  count 4
      CALL FFV2P1N_3(W(1,160), W(1,17), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,126))  !  count 1
      CALL VVV1P0_1(W(1,32),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,161))  !  count 3
      CALL VVV1P0_1(W(1,33),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,162))  !  count 3
      CALL VVV1P0_1(W(1,34),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,163))  !  count 3
      CALL VVV1P0_1(W(1,35),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,164))  !  count 3
      CALL FFV1P1N_3(W(1,64), W(1,17), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/161,162,163,164/),
     & TMP, W, AMP(1,127))  !  count 1
      CALL VVV1_3(W(1,32),W(1,153),GC_53,MDL_MZ,ZERO,W(1,165))  !  count 3
      CALL VVV1_3(W(1,33),W(1,153),GC_53,MDL_MZ,ZERO,W(1,166))  !  count 3
      CALL VVV1_3(W(1,34),W(1,153),GC_53,MDL_MZ,ZERO,W(1,167))  !  count 3
      CALL VVV1_3(W(1,35),W(1,153),GC_53,MDL_MZ,ZERO,W(1,168))  !  count 3
      CALL FFV2_5P1N_3(W(1,64), W(1,17), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/165,166,167,168/),
     & TMP, W, AMP(1,128))  !  count 1
      CALL FFV2P1N_3(W(1,64), W(1,47), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,129))  !  count 1
      CALL VVV1_3(W(1,5),W(1,153),GC_53,MDL_MZ,ZERO,W(1,169))  !  count 28
      CALL VVS1P1N_3(W(1,169), W(1,24), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,130))  !  count 1
      CALL FFV1P0_3(W(1,20),W(1,17),GC_2,ZERO,FK_ZERO,W(1,170))  !  count 12
      CALL VVV1P1N_3(W(1,170), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,131))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,24), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,132))  !  count 1
      CALL FFV2_2(W(1,20),W(1,153),GC_100,ZERO,FK_ZERO,W(1,171))  !  count 4
      CALL FFV2P1N_3(W(1,171), W(1,17), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,133))  !  count 1
      CALL VVV1P0_1(W(1,71),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,172))  !  count 3
      CALL VVV1P0_1(W(1,72),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,173))  !  count 3
      CALL VVV1P0_1(W(1,73),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,174))  !  count 3
      CALL VVV1P0_1(W(1,74),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,175))  !  count 3
      CALL FFV1P1N_3(W(1,20), W(1,17), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/172,173,174,175/),
     & TMP, W, AMP(1,134))  !  count 1
      CALL VVV1_3(W(1,71),W(1,153),GC_53,MDL_MZ,ZERO,W(1,176))  !  count 3
      CALL VVV1_3(W(1,72),W(1,153),GC_53,MDL_MZ,ZERO,W(1,177))  !  count 3
      CALL VVV1_3(W(1,73),W(1,153),GC_53,MDL_MZ,ZERO,W(1,178))  !  count 3
      CALL VVV1_3(W(1,74),W(1,153),GC_53,MDL_MZ,ZERO,W(1,179))  !  count 3
      CALL FFV2_5P1N_3(W(1,20), W(1,17), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/176,177,178,179/),
     & TMP, W, AMP(1,135))  !  count 1
      CALL FFV2P1N_3(W(1,20), W(1,81), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,136))  !  count 1
      CALL VVS1_3(W(1,5),W(1,153),GC_72,MDL_MH,ZERO,W(1,180))  !  count 16
      CALL VVS1_3(W(1,8),W(1,25),GC_72,MDL_MH,ZERO,W(1,181))  !  count 8
      CALL SSS1P1N_3(W(1,180), W(1,181), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,137))  !  count 1
      CALL VVS1P1N_3(W(1,169), W(1,26), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,138))  !  count 1
      CALL VVV1P0_1(W(1,5),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,182))  !  count 16
      CALL VVV1P1N_3(W(1,182), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,139))  !  count 1
      CALL VVS1P1N_2(W(1,8), W(1,180), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,140))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,169), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,141))  !  count 1
      CALL VVSS1P1N_3(W(1,8), W(1,25), W(1,180), GC_34, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,142))  !  count 1
      CALL VVS1_3(W(1,8),W(1,153),GC_72,MDL_MH,ZERO,W(1,183))  !  count 16
      CALL VVS1_3(W(1,5),W(1,25),GC_72,MDL_MH,ZERO,W(1,184))  !  count 8
      CALL SSS1P1N_3(W(1,183), W(1,184), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,143))  !  count 1
      CALL VVS1P1N_3(W(1,154), W(1,69), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,144))  !  count 1
      CALL VVV1P0_1(W(1,8),W(1,153),-GC_3,ZERO,FK_ZERO,W(1,185))  !  count 16
      CALL VVV1P1N_3(W(1,185), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,145))  !  count 1
      CALL VVS1P1N_2(W(1,5), W(1,183), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,146))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,154), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,147))  !  count 1
      CALL VVSS1P1N_3(W(1,5), W(1,25), W(1,183), GC_34, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,148))  !  count 1
      CALL VVV1P0_1(W(1,5),W(1,25),-GC_3,ZERO,FK_ZERO,W(1,186))  !  count 12
      CALL VVV1P1N_3(W(1,186), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,149))  !  count 1
      CALL VVS1P1N_2(W(1,8), W(1,184), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,150))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,69), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,151))  !  count 1
      CALL VVV1P0_1(W(1,8),W(1,25),-GC_3,ZERO,FK_ZERO,W(1,187))  !  count 12
      CALL VVV1P1N_3(W(1,187), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,152))  !  count 1
      CALL VVS1P1N_2(W(1,5), W(1,181), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,153))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,26), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,154))  !  count 1
      CALL VVVV2P1N_4(W(1,5), W(1,8), W(1,25), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,155))  !  count 1
      CALL VVVV2_3(W(1,5),W(1,8),W(1,153),GC_35,MDL_MW,ZERO,W(1,188))  !  count 4
      CALL VVS1P1N_3(W(1,188), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,156))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,153),W(1,13),GC_34,MDL_MH,ZERO,W(1,189))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,153),W(1,14),GC_34,MDL_MH,ZERO,W(1,190))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,153),W(1,15),GC_34,MDL_MH,ZERO,W(1,191))  !  count 1
      CALL VVSS1_3(W(1,5),W(1,153),W(1,16),GC_34,MDL_MH,ZERO,W(1,192))  !  count 1
      CALL VVS1P1N_3(W(1,8), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/189,190,191,192/), 
     & TMP, W, AMP(1,157))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,153),W(1,13),GC_34,MDL_MH,ZERO,W(1,193))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,153),W(1,14),GC_34,MDL_MH,ZERO,W(1,194))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,153),W(1,15),GC_34,MDL_MH,ZERO,W(1,195))  !  count 1
      CALL VVSS1_3(W(1,8),W(1,153),W(1,16),GC_34,MDL_MH,ZERO,W(1,196))  !  count 1
      CALL VVS1P1N_3(W(1,5), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/193,194,195,196/), 
     & TMP, W, AMP(1,158))  !  count 1
      CALL VVVV2P1N_1(W(1,8), W(1,153), W(1,25), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,159))  !  count 1
      CALL VVV1P1N_1(W(1,8), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/172,173,174,175/),
     & TMP, W, AMP(1,160))  !  count 1
      CALL VVS1_3(W(1,71),W(1,153),GC_72,MDL_MH,ZERO,W(1,197))  !  count 1
      CALL VVS1_3(W(1,72),W(1,153),GC_72,MDL_MH,ZERO,W(1,198))  !  count 1
      CALL VVS1_3(W(1,73),W(1,153),GC_72,MDL_MH,ZERO,W(1,199))  !  count 1
      CALL VVS1_3(W(1,74),W(1,153),GC_72,MDL_MH,ZERO,W(1,200))  !  count 1
      CALL VVS1P1N_3(W(1,8), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/197,198,199,200/), 
     & TMP, W, AMP(1,161))  !  count 1
      CALL VVV1P1N_3(W(1,8), W(1,25), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/176,177,178,179/),
     & TMP, W, AMP(1,162))  !  count 1
      CALL VVV1P1N_2(W(1,185), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,163))  !  count 1
      CALL VVS1P1N_1(W(1,25), W(1,183), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,164))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,154), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,165))  !  count 1
      CALL VVVV2P1N_2(W(1,5), W(1,153), W(1,25), GC_35, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,166))  !  count 1
      CALL VVV1P1N_2(W(1,182), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,167))  !  count 1
      CALL VVS1P1N_1(W(1,25), W(1,180), GC_72, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,168))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,169), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,169))  !  count 1
      CALL VVV1P1N_1(W(1,5), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/161,162,163,164/),
     & TMP, W, AMP(1,170))  !  count 1
      CALL VVS1_3(W(1,32),W(1,153),GC_72,MDL_MH,ZERO,W(1,201))  !  count 1
      CALL VVS1_3(W(1,33),W(1,153),GC_72,MDL_MH,ZERO,W(1,202))  !  count 1
      CALL VVS1_3(W(1,34),W(1,153),GC_72,MDL_MH,ZERO,W(1,203))  !  count 1
      CALL VVS1_3(W(1,35),W(1,153),GC_72,MDL_MH,ZERO,W(1,204))  !  count 1
      CALL VVS1P1N_3(W(1,5), W(1,25), GC_72, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/201,202,203,204/), 
     & TMP, W, AMP(1,171))  !  count 1
      CALL VVV1P1N_3(W(1,5), W(1,25), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/165,166,167,168/),
     & TMP, W, AMP(1,172))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,185), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,173))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,154), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,174))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,185), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,175))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,154), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,176))  !  count 1
      CALL FFV1P1N_3(W(1,2), W(1,47), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/172,173,174,175/),
     & TMP, W, AMP(1,177))  !  count 1
      CALL FFV2_3P1N_3(W(1,2), W(1,47), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/176,177,178,179/),
     & TMP, W, AMP(1,178))  !  count 1
      CALL FFV2_1(W(1,47),W(1,153),GC_100,ZERO,FK_ZERO,W(1,205))  !  count 4
      CALL FFV2P1N_3(W(1,2), W(1,205), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,179))  !  count 1
      CALL VVS1P1N_3(W(1,154), W(1,95), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,180))  !  count 1
      CALL FFV1P0_3(W(1,2),W(1,81),GC_1,ZERO,FK_ZERO,W(1,206))  !  count 12
      CALL VVV1P1N_3(W(1,206), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,181))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,95), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,182))  !  count 1
      CALL FFV2_1(W(1,81),W(1,153),GC_100,ZERO,FK_ZERO,W(1,207))  !  count 4
      CALL FFV2P1N_3(W(1,2), W(1,207), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,183))  !  count 1
      CALL FFV1P1N_3(W(1,2), W(1,81), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/161,162,163,164/),
     & TMP, W, AMP(1,184))  !  count 1
      CALL FFV2_3P1N_3(W(1,2), W(1,81), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/165,166,167,168/),
     & TMP, W, AMP(1,185))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,182), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,186))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,169), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,187))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,182), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,188))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,169), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,189))  !  count 1
      CALL VVS1P1N_3(W(1,169), W(1,61), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,190))  !  count 1
      CALL FFV1P0_3(W(1,2),W(1,47),GC_1,ZERO,FK_ZERO,W(1,208))  !  count 12
      CALL VVV1P1N_3(W(1,208), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,191))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,61), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/155,156,157,158/),
     & TMP, W, AMP(1,192))  !  count 1
      CALL FFV2_2(W(1,1),W(1,32),GC_100,ZERO,FK_ZERO,W(1,209))  !  count 14
      CALL FFV2_2(W(1,1),W(1,33),GC_100,ZERO,FK_ZERO,W(1,210))  !  count 14
      CALL FFV2_2(W(1,1),W(1,34),GC_100,ZERO,FK_ZERO,W(1,211))  !  count 14
      CALL FFV2_2(W(1,1),W(1,35),GC_100,ZERO,FK_ZERO,W(1,212))  !  count 14
      CALL FFV1P1N_1(W(1,18), W(1,159), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,193))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,68), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,194))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,103), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,195))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,66), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,196))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,159), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,197))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,68), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,198))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,103), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,199))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,66), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,200))  !  count 1
      CALL FFV2_3_3(W(1,1),W(1,47),GC_50,GC_58,MDL_MZ,ZERO,W(1,213))  !  count 28
      CALL VVS1P1N_3(W(1,213), W(1,66), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,201))  !  count 1
      CALL FFV2_3_3(W(1,1),W(1,37),GC_50,GC_58,MDL_MZ,ZERO,W(1,214))  !  count 28
      CALL VVS1P1N_3(W(1,214), W(1,68), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,202))  !  count 1
      CALL FFV2_2(W(1,1),W(1,71),GC_100,ZERO,FK_ZERO,W(1,215))  !  count 14
      CALL FFV2_2(W(1,1),W(1,72),GC_100,ZERO,FK_ZERO,W(1,216))  !  count 14
      CALL FFV2_2(W(1,1),W(1,73),GC_100,ZERO,FK_ZERO,W(1,217))  !  count 14
      CALL FFV2_2(W(1,1),W(1,74),GC_100,ZERO,FK_ZERO,W(1,218))  !  count 14
      CALL FFV1P1N_1(W(1,18), W(1,170), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,203))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,24), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,204))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,114), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,205))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,22), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,206))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,170), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,207))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,24), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,208))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,114), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,209))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,22), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,210))  !  count 1
      CALL FFV2_3_3(W(1,1),W(1,81),GC_50,GC_58,MDL_MZ,ZERO,W(1,219))  !  count 28
      CALL VVS1P1N_3(W(1,219), W(1,22), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,211))  !  count 1
      CALL FFV2_3_3(W(1,1),W(1,76),GC_50,GC_58,MDL_MZ,ZERO,W(1,220))  !  count 28
      CALL VVS1P1N_3(W(1,220), W(1,24), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,212))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,187), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,213))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,26), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,214))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,187), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,215))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,26), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,216))  !  count 1
      CALL FFV2P1N_1(W(1,37), W(1,25), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,217))  !  count 1
      CALL FFV1P0_3(W(1,1),W(1,37),GC_1,ZERO,FK_ZERO,W(1,221))  !  count 16
      CALL VVV1P1N_2(W(1,221), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,218))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,214), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,219))  !  count 1
      CALL VVS1P1N_3(W(1,220), W(1,26), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,220))  !  count 1
      CALL FFV1P0_3(W(1,1),W(1,76),GC_1,ZERO,FK_ZERO,W(1,222))  !  count 16
      CALL VVV1P1N_3(W(1,222), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,221))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,220), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,222))  !  count 1
      CALL VVV1P1N_2(W(1,222), W(1,25), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,223))  !  count 1
      CALL VVV1P1N_1(W(1,25), W(1,220), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,224))  !  count 1
      CALL FFV2P1N_1(W(1,76), W(1,25), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,225))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,186), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,226))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,69), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,227))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,186), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,228))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,69), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,229))  !  count 1
      CALL VVS1P1N_3(W(1,214), W(1,69), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,230))  !  count 1
      CALL VVV1P1N_3(W(1,221), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,231))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,214), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/28,29,30,31/),
     & TMP, W, AMP(1,232))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,131), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,233))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,40), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,234))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,131), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,235))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,40), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,236))  !  count 1
      CALL FFV2P1N_1(W(1,47), W(1,39), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,237))  !  count 1
      CALL FFV1P0_3(W(1,1),W(1,47),GC_1,ZERO,FK_ZERO,W(1,223))  !  count 16
      CALL VVV1P1N_2(W(1,223), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,238))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,213), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/71,72,73,74/),
     & TMP, W, AMP(1,239))  !  count 1
      CALL VVS1P1N_3(W(1,219), W(1,40), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,240))  !  count 1
      CALL FFV1P0_3(W(1,1),W(1,81),GC_1,ZERO,FK_ZERO,W(1,224))  !  count 16
      CALL VVV1P1N_3(W(1,224), W(1,8), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,241))  !  count 1
      CALL VVV1P1N_2(W(1,8), W(1,219), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,242))  !  count 1
      CALL VVV1P1N_2(W(1,224), W(1,39), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,243))  !  count 1
      CALL VVV1P1N_1(W(1,39), W(1,219), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/32,33,34,35/),
     & TMP, W, AMP(1,244))  !  count 1
      CALL FFV2P1N_1(W(1,81), W(1,39), GC_100, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,245))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,130), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,246))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,78), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,247))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,130), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,248))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,78), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,249))  !  count 1
      CALL VVS1P1N_3(W(1,213), W(1,78), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,250))  !  count 1
      CALL VVV1P1N_3(W(1,223), W(1,5), -GC_3, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,251))  !  count 1
      CALL VVV1P1N_2(W(1,5), W(1,213), GC_53, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/42,43,44,45/),
     & TMP, W, AMP(1,252))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,208), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,253))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,61), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,254))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,223), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,255))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,213), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,256))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,223), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,257))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,213), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,258))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,208), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,259))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,61), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/87,88,89,90/),
     & TMP, W, AMP(1,260))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,152), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,261))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,62), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/215,216,217,218/),
     & TMP, W, AMP(1,262))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,221), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,263))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,214), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/83,84,85,86/),
     & TMP, W, AMP(1,264))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,221), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,265))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,214), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,266))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,152), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,267))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,62), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/91,92,93,94/),
     & TMP, W, AMP(1,268))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,224), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,269))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,219), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,270))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,224), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,271))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,219), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,272))  !  count 1
      CALL FFV1P1N_1(W(1,18), W(1,206), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,273))  !  count 1
      CALL FFV2_5P1N_1(W(1,18), W(1,95), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,274))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,206), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,275))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,95), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/53,54,55,56/),
     & TMP, W, AMP(1,276))  !  count 1
      CALL VVS1P1N_3(W(1,219), W(1,62), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,277))  !  count 1
      CALL VVS1P1N_3(W(1,214), W(1,95), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,278))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,222), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,279))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,220), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/49,50,51,52/),
     & TMP, W, AMP(1,280))  !  count 1
      CALL FFV1P1N_2(W(1,2), W(1,222), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,281))  !  count 1
      CALL FFV2_3P1N_2(W(1,2), W(1,220), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,282))  !  count 1
      CALL FFV1P1N_1(W(1,17), W(1,150), GC_2, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,283))  !  count 1
      CALL FFV2_5P1N_1(W(1,17), W(1,96), -GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/209,210,211,212/),
     & TMP, W, AMP(1,284))  !  count 1
      CALL FFV1P1N_2(W(1,1), W(1,150), GC_1, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,285))  !  count 1
      CALL FFV2_3P1N_2(W(1,1), W(1,96), GC_50, GC_58, TMP(1))
      call CombineAmp(4,
     & (/3,1,4,2/), 
     & (/57,58,59,60/),
     & TMP, W, AMP(1,286))  !  count 1
      CALL VVS1P1N_3(W(1,220), W(1,61), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,287))  !  count 1
      CALL VVS1P1N_3(W(1,213), W(1,96), GC_81, TMP(1))
      call CombineAmpS(4, 
     &(/3,1,4,2/), 
     & (/13,14,15,16/), 
     & TMP, W, AMP(1,288))  !  count 1

      JAMP(:,:)  = (0d0,0d0)
      DO K = 1, NCOMB
        
        JAMP(:,:) = (0D0,0D0)
C       JAMPs contributing to orders ALL_ORDERS=1
        JAMP(1,1) = AMP( K,1)+AMP( K,10)+AMP( K,11)+AMP( K,12)+AMP( K,13
     $  )+AMP( K,14) +AMP( K,15)+AMP( K,16)+AMP( K,17)+AMP( K,18)+AMP( K,19)+AMP
     $  ( K,20)+AMP( K,26)+AMP( K,27) +AMP( K,36)+AMP( K,37)+AMP( K,38)+AMP( K,3
     $  9)+AMP( K,40)+AMP( K,41)+AMP( K,42)+AMP( K,43) +AMP( K,44)+AMP( K,45)+AM
     $  P( K,46)+AMP( K,52)+AMP( K,53)+AMP( K,54)+AMP( K,55)+AMP( K,56) +AMP( K,
     $  57)+AMP( K,58)+AMP( K,59)+AMP( K,60)+AMP( K,61)+AMP( K,62)+AMP( K,63)+AM
     $  P( K,64) +AMP( K,65)+AMP( K,66)+AMP( K,67)+AMP( K,68)+AMP( K,69)+AMP( K,
     $  70)+AMP( K,71)+AMP( K,72) +AMP( K,73)+AMP( K,74)+AMP( K,75)+AMP( K,76)+A
     $  MP( K,77)+AMP( K,78)+AMP( K,79)+AMP( K,80) +AMP( K,81)+AMP( K,82)+AMP( K
     $  ,83)+AMP( K,84)+AMP( K,85)+AMP( K,86)+AMP( K,87)+AMP( K,88) +AMP( K,89)+
     $  AMP( K,90)+AMP( K,91)+AMP( K,92)+AMP( K,93)+AMP( K,94)+AMP( K,95)+AMP( K
     $  ,96) +AMP( K,97)+AMP( K,98)+AMP( K,99)+AMP( K,100)+AMP( K,101)+AMP( K,10
     $  2)+AMP( K,103) +AMP( K,104)+AMP( K,105)+AMP( K,106)+AMP( K,107)+AMP( K,1
     $  08)+AMP( K,109)+AMP( K,110) +AMP( K,111)+AMP( K,112)+AMP( K,113)+AMP( K,
     $  114)+AMP( K,115)+AMP( K,116)+AMP( K,117) +AMP( K,118)+AMP( K,119)+AMP( K
     $  ,120)+AMP( K,121)+AMP( K,122)+AMP( K,195)+AMP( K,196) +AMP( K,199)+AMP( 
     $  K,200)+AMP( K,201)+AMP( K,205)+AMP( K,206)+AMP( K,209)+AMP( K,210) +AMP(
     $   K,211)+AMP( K,233)+AMP( K,234)+AMP( K,235)+AMP( K,236)+AMP( K,237)+AMP(
     $   K,238) +AMP( K,239)+AMP( K,240)+AMP( K,241)+AMP( K,242)+AMP( K,243)+AMP
     $  ( K,244)+AMP( K,245) +AMP( K,246)+AMP( K,247)+AMP( K,248)+AMP( K,249)+AM
     $  P( K,250)+AMP( K,251)+AMP( K,252) +AMP( K,255)+AMP( K,256)+AMP( K,257)+A
     $  MP( K,258)+AMP( K,261)+AMP( K,262)+AMP( K,267) +AMP( K,268)+AMP( K,269)+
     $  AMP( K,270)+AMP( K,271)+AMP( K,272)+AMP( K,277)+AMP( K,283) +AMP( K,284)
     $  +AMP( K,285)+AMP( K,286)+AMP( K,288)
        JAMP(2,1) = (-1.000000000000000D+00)*AMP( K,2)+(-1.0000000000000
     $  00D +00)*AMP( K,3)+(-1.000000000000000D+00)*AMP( K,4)+( -1.0000000000000
     $  00D+00)*AMP( K,5)+(-1.000000000000000D+00)*AMP( K,6) +(-1.00000000000000
     $  0D+00)*AMP( K,7)+(-1.000000000000000D+00)*AMP( K,8) +(-1.000000000000000
     $  D+00)*AMP( K,9)+(-1.000000000000000D+00) *AMP( K,21)+(-1.000000000000000
     $  D+00)*AMP( K,22)+(-1.000000000000000D +00)*AMP( K,23)+(-1.00000000000000
     $  0D+00)*AMP( K,24)+( -1.000000000000000D+00)*AMP( K,25)+(-1.0000000000000
     $  00D+00)*AMP( K,28) +(-1.000000000000000D+00)*AMP( K,29)+(-1.000000000000
     $  000D+00) *AMP( K,30)+(-1.000000000000000D+00)*AMP( K,31)+(-1.00000000000
     $  0000D +00)*AMP( K,32)+(-1.000000000000000D+00)*AMP( K,33)+( -1.000000000
     $  000000D+00)*AMP( K,34)+(-1.000000000000000D+00)*AMP( K,35) +(-1.00000000
     $  0000000D+00)*AMP( K,47)+(-1.000000000000000D+00) *AMP( K,48)+(-1.0000000
     $  00000000D+00)*AMP( K,49)+(-1.000000000000000D +00)*AMP( K,50)+(-1.000000
     $  000000000D+00)*AMP( K,51)+( -1.000000000000000D+00)*AMP( K,123)+(-1.0000
     $  00000000000D+00) *AMP( K,124)+(-1.000000000000000D+00)*AMP( K,125)+( -1.
     $  000000000000000D+00)*AMP( K,126)+(-1.000000000000000D+00) *AMP( K,127)+(
     $  -1.000000000000000D+00)*AMP( K,128)+( -1.000000000000000D+00)*AMP( K,129
     $  )+(-1.000000000000000D+00) *AMP( K,130)+(-1.000000000000000D+00)*AMP( K,
     $  131)+( -1.000000000000000D+00)*AMP( K,132)+(-1.000000000000000D+00) *AMP
     $  ( K,133)+(-1.000000000000000D+00)*AMP( K,134)+( -1.000000000000000D+00)*
     $  AMP( K,135)+(-1.000000000000000D+00) *AMP( K,136)+(-1.000000000000000D+0
     $  0)*AMP( K,137)+( -1.000000000000000D+00)*AMP( K,138)+(-1.000000000000000
     $  D+00) *AMP( K,139)+(-1.000000000000000D+00)*AMP( K,140)+( -1.00000000000
     $  0000D+00)*AMP( K,141)+(-1.000000000000000D+00) *AMP( K,142)+(-1.00000000
     $  0000000D+00)*AMP( K,143)+( -1.000000000000000D+00)*AMP( K,144)+(-1.00000
     $  0000000000D+00) *AMP( K,145)+(-1.000000000000000D+00)*AMP( K,146)+( -1.0
     $  00000000000000D+00)*AMP( K,147)+(-1.000000000000000D+00) *AMP( K,148)+(-
     $  1.000000000000000D+00)*AMP( K,149)+( -1.000000000000000D+00)*AMP( K,150)
     $  +(-1.000000000000000D+00) *AMP( K,151)+(-1.000000000000000D+00)*AMP( K,1
     $  52)+( -1.000000000000000D+00)*AMP( K,153)+(-1.000000000000000D+00) *AMP(
     $   K,154)+(-1.000000000000000D+00)*AMP( K,155)+( -1.000000000000000D+00)*A
     $  MP( K,156)+(-1.000000000000000D+00) *AMP( K,157)+(-1.000000000000000D+00
     $  )*AMP( K,158)+( -1.000000000000000D+00)*AMP( K,159)+(-1.000000000000000D
     $  +00) *AMP( K,160)+(-1.000000000000000D+00)*AMP( K,161)+( -1.000000000000
     $  000D+00)*AMP( K,162)+(-1.000000000000000D+00) *AMP( K,163)+(-1.000000000
     $  000000D+00)*AMP( K,164)+( -1.000000000000000D+00)*AMP( K,165)+(-1.000000
     $  000000000D+00) *AMP( K,166)+(-1.000000000000000D+00)*AMP( K,167)+( -1.00
     $  0000000000000D+00)*AMP( K,168)+(-1.000000000000000D+00) *AMP( K,169)+(-1
     $  .000000000000000D+00)*AMP( K,170)+( -1.000000000000000D+00)*AMP( K,171)+
     $  (-1.000000000000000D+00) *AMP( K,172)+(-1.000000000000000D+00)*AMP( K,17
     $  3)+( -1.000000000000000D+00)*AMP( K,174)+(-1.000000000000000D+00) *AMP( 
     $  K,175)+(-1.000000000000000D+00)*AMP( K,176)+( -1.000000000000000D+00)*AM
     $  P( K,177)+(-1.000000000000000D+00) *AMP( K,178)+(-1.000000000000000D+00)
     $  *AMP( K,179)+( -1.000000000000000D+00)*AMP( K,180)+(-1.000000000000000D+
     $  00) *AMP( K,181)+(-1.000000000000000D+00)*AMP( K,182)+( -1.0000000000000
     $  00D+00)*AMP( K,183)+(-1.000000000000000D+00) *AMP( K,184)+(-1.0000000000
     $  00000D+00)*AMP( K,185)+( -1.000000000000000D+00)*AMP( K,186)+(-1.0000000
     $  00000000D+00) *AMP( K,187)+(-1.000000000000000D+00)*AMP( K,188)+( -1.000
     $  000000000000D+00)*AMP( K,189)+(-1.000000000000000D+00) *AMP( K,190)+(-1.
     $  000000000000000D+00)*AMP( K,191)+( -1.000000000000000D+00)*AMP( K,192)+(
     $  -1.000000000000000D+00) *AMP( K,193)+(-1.000000000000000D+00)*AMP( K,194
     $  )+( -1.000000000000000D+00)*AMP( K,197)+(-1.000000000000000D+00) *AMP( K
     $  ,198)+(-1.000000000000000D+00)*AMP( K,202)+( -1.000000000000000D+00)*AMP
     $  ( K,203)+(-1.000000000000000D+00) *AMP( K,204)+(-1.000000000000000D+00)*
     $  AMP( K,207)+( -1.000000000000000D+00)*AMP( K,208)+(-1.000000000000000D+0
     $  0) *AMP( K,212)+(-1.000000000000000D+00)*AMP( K,213)+( -1.00000000000000
     $  0D+00)*AMP( K,214)+(-1.000000000000000D+00) *AMP( K,215)+(-1.00000000000
     $  0000D+00)*AMP( K,216)+( -1.000000000000000D+00)*AMP( K,217)+(-1.00000000
     $  0000000D+00) *AMP( K,218)+(-1.000000000000000D+00)*AMP( K,219)+( -1.0000
     $  00000000000D+00)*AMP( K,220)+(-1.000000000000000D+00) *AMP( K,221)+(-1.0
     $  00000000000000D+00)*AMP( K,222)+( -1.000000000000000D+00)*AMP( K,223)+(-
     $  1.000000000000000D+00) *AMP( K,224)+(-1.000000000000000D+00)*AMP( K,225)
     $  +( -1.000000000000000D+00)*AMP( K,226)+(-1.000000000000000D+00) *AMP( K,
     $  227)+(-1.000000000000000D+00)*AMP( K,228)+( -1.000000000000000D+00)*AMP(
     $   K,229)+(-1.000000000000000D+00) *AMP( K,230)+(-1.000000000000000D+00)*A
     $  MP( K,231)+( -1.000000000000000D+00)*AMP( K,232)+(-1.000000000000000D+00
     $  ) *AMP( K,253)+(-1.000000000000000D+00)*AMP( K,254)+( -1.000000000000000
     $  D+00)*AMP( K,259)+(-1.000000000000000D+00) *AMP( K,260)+(-1.000000000000
     $  000D+00)*AMP( K,263)+( -1.000000000000000D+00)*AMP( K,264)+(-1.000000000
     $  000000D+00) *AMP( K,265)+(-1.000000000000000D+00)*AMP( K,266)+( -1.00000
     $  0000000000D+00)*AMP( K,273)+(-1.000000000000000D+00) *AMP( K,274)+(-1.00
     $  0000000000000D+00)*AMP( K,275)+( -1.000000000000000D+00)*AMP( K,276)+(-1
     $  .000000000000000D+00) *AMP( K,278)+(-1.000000000000000D+00)*AMP( K,279)+
     $  ( -1.000000000000000D+00)*AMP( K,280)+(-1.000000000000000D+00) *AMP( K,2
     $  81)+(-1.000000000000000D+00)*AMP( K,282)+( -1.000000000000000D+00)*AMP( 
     $  K,287)

        TS(K) = 0.D0 
        DO M = 1, NAMPSO
          DO I = 1, NCOLOR
            ZTEMP = (0.D0,0.D0)
            DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J,M)
            ENDDO
            DO N = 1, NAMPSO

              TS(K) = TS(K) + ZTEMP*DCONJG(JAMP(I,N))

            ENDDO
          ENDDO
        ENDDO
        if(sde_strat.eq.1) then
        
        IF(SDE_STRAT.EQ.1)THEN
          AMP2(1)=AMP2(1)+AMP( K,1)*DCONJG(AMP( K,1))
          AMP2(2)=AMP2(2)+AMP( K,2)*DCONJG(AMP( K,2))
          AMP2(3)=AMP2(3)+AMP( K,3)*DCONJG(AMP( K,3))
          AMP2(4)=AMP2(4)+(AMP( K,4)+AMP( K,5))*DCONJG(AMP( K,4)+AMP( K,
     $    5))
          AMP2(6)=AMP2(6)+AMP( K,6)*DCONJG(AMP( K,6))
          AMP2(7)=AMP2(7)+(AMP( K,7)+AMP( K,8))*DCONJG(AMP( K,7)+AMP( K,
     $    8))
          AMP2(9)=AMP2(9)+AMP( K,9)*DCONJG(AMP( K,9))
          AMP2(10)=AMP2(10)+AMP( K,10)*DCONJG(AMP( K,10))
          AMP2(11)=AMP2(11)+(AMP( K,11)+AMP( K,12))*DCONJG(AMP( K,11)+AM
     $    P( K,12))
          AMP2(13)=AMP2(13)+AMP( K,13)*DCONJG(AMP( K,13))
          AMP2(14)=AMP2(14)+(AMP( K,14)+AMP( K,15))*DCONJG(AMP( K,14)+AM
     $    P( K,15))
          AMP2(16)=AMP2(16)+AMP( K,16)*DCONJG(AMP( K,16))
          AMP2(17)=AMP2(17)+(AMP( K,17)+AMP( K,18))*DCONJG(AMP( K,17)+AM
     $    P( K,18))
          AMP2(19)=AMP2(19)+(AMP( K,19)+AMP( K,20))*DCONJG(AMP( K,19)+AM
     $    P( K,20))
          AMP2(21)=AMP2(21)+(AMP( K,21)+AMP( K,22))*DCONJG(AMP( K,21)+AM
     $    P( K,22))
          AMP2(23)=AMP2(23)+(AMP( K,23)+AMP( K,24))*DCONJG(AMP( K,23)+AM
     $    P( K,24))
          AMP2(25)=AMP2(25)+AMP( K,25)*DCONJG(AMP( K,25))
          AMP2(26)=AMP2(26)+AMP( K,26)*DCONJG(AMP( K,26))
          AMP2(27)=AMP2(27)+AMP( K,27)*DCONJG(AMP( K,27))
          AMP2(28)=AMP2(28)+AMP( K,28)*DCONJG(AMP( K,28))
          AMP2(29)=AMP2(29)+AMP( K,29)*DCONJG(AMP( K,29))
          AMP2(30)=AMP2(30)+(AMP( K,30)+AMP( K,31))*DCONJG(AMP( K,30)+AM
     $    P( K,31))
          AMP2(32)=AMP2(32)+AMP( K,32)*DCONJG(AMP( K,32))
          AMP2(33)=AMP2(33)+(AMP( K,33)+AMP( K,34))*DCONJG(AMP( K,33)+AM
     $    P( K,34))
          AMP2(35)=AMP2(35)+AMP( K,35)*DCONJG(AMP( K,35))
          AMP2(36)=AMP2(36)+AMP( K,36)*DCONJG(AMP( K,36))
          AMP2(37)=AMP2(37)+(AMP( K,37)+AMP( K,38))*DCONJG(AMP( K,37)+AM
     $    P( K,38))
          AMP2(39)=AMP2(39)+AMP( K,39)*DCONJG(AMP( K,39))
          AMP2(40)=AMP2(40)+(AMP( K,40)+AMP( K,41))*DCONJG(AMP( K,40)+AM
     $    P( K,41))
          AMP2(42)=AMP2(42)+AMP( K,42)*DCONJG(AMP( K,42))
          AMP2(43)=AMP2(43)+(AMP( K,43)+AMP( K,44))*DCONJG(AMP( K,43)+AM
     $    P( K,44))
          AMP2(45)=AMP2(45)+(AMP( K,45)+AMP( K,46))*DCONJG(AMP( K,45)+AM
     $    P( K,46))
          AMP2(47)=AMP2(47)+(AMP( K,47)+AMP( K,48))*DCONJG(AMP( K,47)+AM
     $    P( K,48))
          AMP2(49)=AMP2(49)+(AMP( K,49)+AMP( K,50))*DCONJG(AMP( K,49)+AM
     $    P( K,50))
          AMP2(51)=AMP2(51)+AMP( K,51)*DCONJG(AMP( K,51))
          AMP2(52)=AMP2(52)+AMP( K,52)*DCONJG(AMP( K,52))
          AMP2(53)=AMP2(53)+AMP( K,53)*DCONJG(AMP( K,53))
          AMP2(54)=AMP2(54)+(AMP( K,54)+AMP( K,55))*DCONJG(AMP( K,54)+AM
     $    P( K,55))
          AMP2(56)=AMP2(56)+AMP( K,56)*DCONJG(AMP( K,56))
          AMP2(57)=AMP2(57)+(AMP( K,57)+AMP( K,58))*DCONJG(AMP( K,57)+AM
     $    P( K,58))
          AMP2(59)=AMP2(59)+AMP( K,59)*DCONJG(AMP( K,59))
          AMP2(60)=AMP2(60)+AMP( K,60)*DCONJG(AMP( K,60))
          AMP2(61)=AMP2(61)+(AMP( K,61)+AMP( K,62))*DCONJG(AMP( K,61)+AM
     $    P( K,62))
          AMP2(63)=AMP2(63)+AMP( K,63)*DCONJG(AMP( K,63))
          AMP2(64)=AMP2(64)+(AMP( K,64)+AMP( K,65))*DCONJG(AMP( K,64)+AM
     $    P( K,65))
          AMP2(66)=AMP2(66)+AMP( K,66)*DCONJG(AMP( K,66))
          AMP2(67)=AMP2(67)+(AMP( K,67)+AMP( K,68))*DCONJG(AMP( K,67)+AM
     $    P( K,68))
          AMP2(69)=AMP2(69)+(AMP( K,69)+AMP( K,70)+AMP( K,71))*DCONJG(AM
     $    P( K,69)   +AMP( K,70)+AMP( K,71))
          AMP2(73)=AMP2(73)+(AMP( K,73)+AMP( K,74))*DCONJG(AMP( K,73)+AM
     $    P( K,74))
          AMP2(75)=AMP2(75)+(AMP( K,75)+AMP( K,76)+AMP( K,77))*DCONJG(AM
     $    P( K,75)   +AMP( K,76)+AMP( K,77))
          AMP2(79)=AMP2(79)+(AMP( K,79)+AMP( K,80)+AMP( K,81))*DCONJG(AM
     $    P( K,79)   +AMP( K,80)+AMP( K,81))
          AMP2(82)=AMP2(82)+(AMP( K,82)+AMP( K,83)+AMP( K,84))*DCONJG(AM
     $    P( K,82)   +AMP( K,83)+AMP( K,84))
          AMP2(90)=AMP2(90)+(AMP( K,90)+AMP( K,91)+AMP( K,92))*DCONJG(AM
     $    P( K,90)   +AMP( K,91)+AMP( K,92))
          AMP2(93)=AMP2(93)+(AMP( K,93)+AMP( K,94)+AMP( K,95))*DCONJG(AM
     $    P( K,93)   +AMP( K,94)+AMP( K,95))
          AMP2(97)=AMP2(97)+(AMP( K,97)+AMP( K,98)+AMP( K,99))*DCONJG(AM
     $    P( K,97)   +AMP( K,98)+AMP( K,99))
          AMP2(100)=AMP2(100)+(AMP( K,100)+AMP( K,101)+AMP( K,102))   *D
     $    CONJG(AMP( K,100)+AMP( K,101)+AMP( K,102))
          AMP2(103)=AMP2(103)+(AMP( K,103)+AMP( K,104))*DCONJG(AMP( K,10
     $    3)   +AMP( K,104))
          AMP2(105)=AMP2(105)+(AMP( K,105)+AMP( K,106))*DCONJG(AMP( K,10
     $    5)   +AMP( K,106))
          AMP2(107)=AMP2(107)+(AMP( K,107)+AMP( K,108))*DCONJG(AMP( K,10
     $    7)   +AMP( K,108))
          AMP2(109)=AMP2(109)+AMP( K,109)*DCONJG(AMP( K,109))
          AMP2(110)=AMP2(110)+AMP( K,110)*DCONJG(AMP( K,110))
          AMP2(111)=AMP2(111)+(AMP( K,111)+AMP( K,112))*DCONJG(AMP( K,11
     $    1)   +AMP( K,112))
          AMP2(113)=AMP2(113)+AMP( K,113)*DCONJG(AMP( K,113))
          AMP2(114)=AMP2(114)+(AMP( K,114)+AMP( K,115))*DCONJG(AMP( K,11
     $    4)   +AMP( K,115))
          AMP2(116)=AMP2(116)+(AMP( K,116)+AMP( K,117))*DCONJG(AMP( K,11
     $    6)   +AMP( K,117))
          AMP2(118)=AMP2(118)+(AMP( K,118)+AMP( K,119))*DCONJG(AMP( K,11
     $    8)   +AMP( K,119))
          AMP2(120)=AMP2(120)+AMP( K,120)*DCONJG(AMP( K,120))
          AMP2(121)=AMP2(121)+(AMP( K,121)+AMP( K,122))*DCONJG(AMP( K,12
     $    1)   +AMP( K,122))
          AMP2(123)=AMP2(123)+AMP( K,123)*DCONJG(AMP( K,123))
          AMP2(124)=AMP2(124)+(AMP( K,124)+AMP( K,125))*DCONJG(AMP( K,12
     $    4)   +AMP( K,125))
          AMP2(126)=AMP2(126)+AMP( K,126)*DCONJG(AMP( K,126))
          AMP2(127)=AMP2(127)+(AMP( K,127)+AMP( K,128))*DCONJG(AMP( K,12
     $    7)   +AMP( K,128))
          AMP2(129)=AMP2(129)+AMP( K,129)*DCONJG(AMP( K,129))
          AMP2(130)=AMP2(130)+AMP( K,130)*DCONJG(AMP( K,130))
          AMP2(131)=AMP2(131)+(AMP( K,131)+AMP( K,132))*DCONJG(AMP( K,13
     $    1)   +AMP( K,132))
          AMP2(133)=AMP2(133)+AMP( K,133)*DCONJG(AMP( K,133))
          AMP2(134)=AMP2(134)+(AMP( K,134)+AMP( K,135))*DCONJG(AMP( K,13
     $    4)   +AMP( K,135))
          AMP2(136)=AMP2(136)+AMP( K,136)*DCONJG(AMP( K,136))
          AMP2(137)=AMP2(137)+(AMP( K,137)+AMP( K,138))*DCONJG(AMP( K,13
     $    7)   +AMP( K,138))
          AMP2(139)=AMP2(139)+(AMP( K,139)+AMP( K,140)+AMP( K,141))   *D
     $    CONJG(AMP( K,139)+AMP( K,140)+AMP( K,141))
          AMP2(143)=AMP2(143)+(AMP( K,143)+AMP( K,144))*DCONJG(AMP( K,14
     $    3)   +AMP( K,144))
          AMP2(145)=AMP2(145)+(AMP( K,145)+AMP( K,146)+AMP( K,147))   *D
     $    CONJG(AMP( K,145)+AMP( K,146)+AMP( K,147))
          AMP2(149)=AMP2(149)+(AMP( K,149)+AMP( K,150)+AMP( K,151))   *D
     $    CONJG(AMP( K,149)+AMP( K,150)+AMP( K,151))
          AMP2(152)=AMP2(152)+(AMP( K,152)+AMP( K,153)+AMP( K,154))   *D
     $    CONJG(AMP( K,152)+AMP( K,153)+AMP( K,154))
          AMP2(160)=AMP2(160)+(AMP( K,160)+AMP( K,161)+AMP( K,162))   *D
     $    CONJG(AMP( K,160)+AMP( K,161)+AMP( K,162))
          AMP2(163)=AMP2(163)+(AMP( K,163)+AMP( K,164)+AMP( K,165))   *D
     $    CONJG(AMP( K,163)+AMP( K,164)+AMP( K,165))
          AMP2(167)=AMP2(167)+(AMP( K,167)+AMP( K,168)+AMP( K,169))   *D
     $    CONJG(AMP( K,167)+AMP( K,168)+AMP( K,169))
          AMP2(170)=AMP2(170)+(AMP( K,170)+AMP( K,171)+AMP( K,172))   *D
     $    CONJG(AMP( K,170)+AMP( K,171)+AMP( K,172))
          AMP2(173)=AMP2(173)+(AMP( K,173)+AMP( K,174))*DCONJG(AMP( K,17
     $    3)   +AMP( K,174))
          AMP2(175)=AMP2(175)+(AMP( K,175)+AMP( K,176))*DCONJG(AMP( K,17
     $    5)   +AMP( K,176))
          AMP2(177)=AMP2(177)+(AMP( K,177)+AMP( K,178))*DCONJG(AMP( K,17
     $    7)   +AMP( K,178))
          AMP2(179)=AMP2(179)+AMP( K,179)*DCONJG(AMP( K,179))
          AMP2(180)=AMP2(180)+AMP( K,180)*DCONJG(AMP( K,180))
          AMP2(181)=AMP2(181)+(AMP( K,181)+AMP( K,182))*DCONJG(AMP( K,18
     $    1)   +AMP( K,182))
          AMP2(183)=AMP2(183)+AMP( K,183)*DCONJG(AMP( K,183))
          AMP2(184)=AMP2(184)+(AMP( K,184)+AMP( K,185))*DCONJG(AMP( K,18
     $    4)   +AMP( K,185))
          AMP2(186)=AMP2(186)+(AMP( K,186)+AMP( K,187))*DCONJG(AMP( K,18
     $    6)   +AMP( K,187))
          AMP2(188)=AMP2(188)+(AMP( K,188)+AMP( K,189))*DCONJG(AMP( K,18
     $    8)   +AMP( K,189))
          AMP2(190)=AMP2(190)+AMP( K,190)*DCONJG(AMP( K,190))
          AMP2(191)=AMP2(191)+(AMP( K,191)+AMP( K,192))*DCONJG(AMP( K,19
     $    1)   +AMP( K,192))
          AMP2(193)=AMP2(193)+(AMP( K,193)+AMP( K,194))*DCONJG(AMP( K,19
     $    3)   +AMP( K,194))
          AMP2(195)=AMP2(195)+(AMP( K,195)+AMP( K,196))*DCONJG(AMP( K,19
     $    5)   +AMP( K,196))
          AMP2(197)=AMP2(197)+(AMP( K,197)+AMP( K,198))*DCONJG(AMP( K,19
     $    7)   +AMP( K,198))
          AMP2(199)=AMP2(199)+(AMP( K,199)+AMP( K,200))*DCONJG(AMP( K,19
     $    9)   +AMP( K,200))
          AMP2(201)=AMP2(201)+AMP( K,201)*DCONJG(AMP( K,201))
          AMP2(202)=AMP2(202)+AMP( K,202)*DCONJG(AMP( K,202))
          AMP2(203)=AMP2(203)+(AMP( K,203)+AMP( K,204))*DCONJG(AMP( K,20
     $    3)   +AMP( K,204))
          AMP2(205)=AMP2(205)+(AMP( K,205)+AMP( K,206))*DCONJG(AMP( K,20
     $    5)   +AMP( K,206))
          AMP2(207)=AMP2(207)+(AMP( K,207)+AMP( K,208))*DCONJG(AMP( K,20
     $    7)   +AMP( K,208))
          AMP2(209)=AMP2(209)+(AMP( K,209)+AMP( K,210))*DCONJG(AMP( K,20
     $    9)   +AMP( K,210))
          AMP2(211)=AMP2(211)+AMP( K,211)*DCONJG(AMP( K,211))
          AMP2(212)=AMP2(212)+AMP( K,212)*DCONJG(AMP( K,212))
          AMP2(213)=AMP2(213)+(AMP( K,213)+AMP( K,214))*DCONJG(AMP( K,21
     $    3)   +AMP( K,214))
          AMP2(215)=AMP2(215)+(AMP( K,215)+AMP( K,216))*DCONJG(AMP( K,21
     $    5)   +AMP( K,216))
          AMP2(217)=AMP2(217)+AMP( K,217)*DCONJG(AMP( K,217))
          AMP2(218)=AMP2(218)+(AMP( K,218)+AMP( K,219))*DCONJG(AMP( K,21
     $    8)   +AMP( K,219))
          AMP2(220)=AMP2(220)+AMP( K,220)*DCONJG(AMP( K,220))
          AMP2(221)=AMP2(221)+(AMP( K,221)+AMP( K,222))*DCONJG(AMP( K,22
     $    1)   +AMP( K,222))
          AMP2(223)=AMP2(223)+(AMP( K,223)+AMP( K,224))*DCONJG(AMP( K,22
     $    3)   +AMP( K,224))
          AMP2(225)=AMP2(225)+AMP( K,225)*DCONJG(AMP( K,225))
          AMP2(226)=AMP2(226)+(AMP( K,226)+AMP( K,227))*DCONJG(AMP( K,22
     $    6)   +AMP( K,227))
          AMP2(228)=AMP2(228)+(AMP( K,228)+AMP( K,229))*DCONJG(AMP( K,22
     $    8)   +AMP( K,229))
          AMP2(230)=AMP2(230)+AMP( K,230)*DCONJG(AMP( K,230))
          AMP2(231)=AMP2(231)+(AMP( K,231)+AMP( K,232))*DCONJG(AMP( K,23
     $    1)   +AMP( K,232))
          AMP2(233)=AMP2(233)+(AMP( K,233)+AMP( K,234))*DCONJG(AMP( K,23
     $    3)   +AMP( K,234))
          AMP2(235)=AMP2(235)+(AMP( K,235)+AMP( K,236))*DCONJG(AMP( K,23
     $    5)   +AMP( K,236))
          AMP2(237)=AMP2(237)+AMP( K,237)*DCONJG(AMP( K,237))
          AMP2(238)=AMP2(238)+(AMP( K,238)+AMP( K,239))*DCONJG(AMP( K,23
     $    8)   +AMP( K,239))
          AMP2(240)=AMP2(240)+AMP( K,240)*DCONJG(AMP( K,240))
          AMP2(241)=AMP2(241)+(AMP( K,241)+AMP( K,242))*DCONJG(AMP( K,24
     $    1)   +AMP( K,242))
          AMP2(243)=AMP2(243)+(AMP( K,243)+AMP( K,244))*DCONJG(AMP( K,24
     $    3)   +AMP( K,244))
          AMP2(245)=AMP2(245)+AMP( K,245)*DCONJG(AMP( K,245))
          AMP2(246)=AMP2(246)+(AMP( K,246)+AMP( K,247))*DCONJG(AMP( K,24
     $    6)   +AMP( K,247))
          AMP2(248)=AMP2(248)+(AMP( K,248)+AMP( K,249))*DCONJG(AMP( K,24
     $    8)   +AMP( K,249))
          AMP2(250)=AMP2(250)+AMP( K,250)*DCONJG(AMP( K,250))
          AMP2(251)=AMP2(251)+(AMP( K,251)+AMP( K,252))*DCONJG(AMP( K,25
     $    1)   +AMP( K,252))
          AMP2(253)=AMP2(253)+(AMP( K,253)+AMP( K,254))*DCONJG(AMP( K,25
     $    3)   +AMP( K,254))
          AMP2(255)=AMP2(255)+(AMP( K,255)+AMP( K,256))*DCONJG(AMP( K,25
     $    5)   +AMP( K,256))
          AMP2(257)=AMP2(257)+(AMP( K,257)+AMP( K,258))*DCONJG(AMP( K,25
     $    7)   +AMP( K,258))
          AMP2(259)=AMP2(259)+(AMP( K,259)+AMP( K,260))*DCONJG(AMP( K,25
     $    9)   +AMP( K,260))
          AMP2(261)=AMP2(261)+(AMP( K,261)+AMP( K,262))*DCONJG(AMP( K,26
     $    1)   +AMP( K,262))
          AMP2(263)=AMP2(263)+(AMP( K,263)+AMP( K,264))*DCONJG(AMP( K,26
     $    3)   +AMP( K,264))
          AMP2(265)=AMP2(265)+(AMP( K,265)+AMP( K,266))*DCONJG(AMP( K,26
     $    5)   +AMP( K,266))
          AMP2(267)=AMP2(267)+(AMP( K,267)+AMP( K,268))*DCONJG(AMP( K,26
     $    7)   +AMP( K,268))
          AMP2(269)=AMP2(269)+(AMP( K,269)+AMP( K,270))*DCONJG(AMP( K,26
     $    9)   +AMP( K,270))
          AMP2(271)=AMP2(271)+(AMP( K,271)+AMP( K,272))*DCONJG(AMP( K,27
     $    1)   +AMP( K,272))
          AMP2(273)=AMP2(273)+(AMP( K,273)+AMP( K,274))*DCONJG(AMP( K,27
     $    3)   +AMP( K,274))
          AMP2(275)=AMP2(275)+(AMP( K,275)+AMP( K,276))*DCONJG(AMP( K,27
     $    5)   +AMP( K,276))
          AMP2(277)=AMP2(277)+AMP( K,277)*DCONJG(AMP( K,277))
          AMP2(278)=AMP2(278)+AMP( K,278)*DCONJG(AMP( K,278))
          AMP2(279)=AMP2(279)+(AMP( K,279)+AMP( K,280))*DCONJG(AMP( K,27
     $    9)   +AMP( K,280))
          AMP2(281)=AMP2(281)+(AMP( K,281)+AMP( K,282))*DCONJG(AMP( K,28
     $    1)   +AMP( K,282))
          AMP2(283)=AMP2(283)+(AMP( K,283)+AMP( K,284))*DCONJG(AMP( K,28
     $    3)   +AMP( K,284))
          AMP2(285)=AMP2(285)+(AMP( K,285)+AMP( K,286))*DCONJG(AMP( K,28
     $    5)   +AMP( K,286))
          AMP2(287)=AMP2(287)+AMP( K,287)*DCONJG(AMP( K,287))
          AMP2(288)=AMP2(288)+AMP( K,288)*DCONJG(AMP( K,288))
        ENDIF

        endif
        Do I = 1, NCOLOR
          DO M = 1, NAMPSO
            DO N = 1, NAMPSO

              Jamp2(i)=Jamp2(i)+DABS(DBLE(Jamp(i,m)*dconjg(Jamp(i,n))))

            enddo
          enddo
        Enddo
      ENDDO

      END


      SUBROUTINE PRINT_ZERO_AMP_1()

      integer i
      i =1
      return
      end
C     Set of functions to handle the array indices of the split orders


      INTEGER FUNCTION SQSOINDEX1(ORDERINDEXA, ORDERINDEXB)
C     
C     This functions plays the role of the interference matrix. It can
C      be hardcoded or 
C     made more elegant using hashtables if its execution speed ever
C      becomes a relevant
C     factor. From two split order indices, it return the
C      corresponding index in the squared 
C     order canonical ordering.
C     
C     CONSTANTS
C     

      INTEGER    NSO, NSQUAREDSO, NAMPSO
      PARAMETER (NSO=1, NSQUAREDSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERINDEXA, ORDERINDEXB
C     
C     LOCAL VARIABLES
C     
      INTEGER I, SQORDERS(NSO)
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      DATA (AMPSPLITORDERS(  1,i),i=  1,  1) /    1/
      COMMON/AMPSPLITORDERS1/AMPSPLITORDERS
C     
C     FUNCTION
C     
      INTEGER SOINDEX_FOR_SQUARED_ORDERS1
C     
C     BEGIN CODE
C     
      DO I=1,NSO
        SQORDERS(I)=AMPSPLITORDERS(ORDERINDEXA,I)
     $   +AMPSPLITORDERS(ORDERINDEXB,I)
      ENDDO
      SQSOINDEX1=SOINDEX_FOR_SQUARED_ORDERS1(SQORDERS)
      END

      INTEGER FUNCTION SOINDEX_FOR_SQUARED_ORDERS1(ORDERS)
C     
C     This functions returns the integer index identifying the squared
C      split orders list passed in argument which corresponds to the
C      values of the following list of couplings (and in this order).
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO, NAMPSO
      PARAMETER (NSO=1, NSQSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER SQSPLITORDERS(NSQSO,NSO)
      DATA (SQSPLITORDERS(  1,i),i=  1,  1) /    2/
      COMMON/SQPLITORDERS1/SQPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NSQSO
        DO J=1,NSO
          IF (ORDERS(J).NE.SQSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_SQUARED_ORDERS1 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping in function' 
      WRITE(*,*) 'SOINDEX_FOR_SQUARED_ORDERS1'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

      SUBROUTINE GET_NSQSO_BORN1(NSQSO)
C     
C     Simple subroutine returning the number of squared split order
C     contributions returned when calling smatrix_split_orders 
C     

      INTEGER    NSQUAREDSO
      PARAMETER  (NSQUAREDSO=1)

      INTEGER NSQSO

      NSQSO=NSQUAREDSO

      END

C     This is the inverse subroutine of SOINDEX_FOR_SQUARED_ORDERS.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_SQUARED_ORDERS_FOR_SOINDEX1(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the squared
C      split order index in argument. Order values correspond to
C      following list of couplings (and in this order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO
      PARAMETER (NSO=1, NSQSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER SQPLITORDERS(NSQSO,NSO)
      COMMON/SQPLITORDERS1/SQPLITORDERS	  
C     
C     BEGIN CODE
C     
      IF (SOINDEX.gt.0.and.SOINDEX.le.NSQSO) THEN
        DO I=1,NSO
          ORDERS(I) =  SQPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function'
     $ //' GET_SQUARED_ORDERS_FOR_SOINDEX1'
      WRITE(*,*) 'Could not find squared orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This is the inverse subroutine of getting amplitude SO orders.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_ORDERS_FOR_AMPSOINDEX1(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the split order
C      index in argument. Order values correspond to following list of
C      couplings (and in this order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS1/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      IF (SOINDEX.gt.0.and.SOINDEX.le.NAMPSO) THEN
        DO I=1,NSO
          ORDERS(I) =  AMPSPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function GET_ORDERS_FOR_AMPSOINDEX1'
      WRITE(*,*) 'Could not find amplitude split orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This function is not directly useful, but included for
C      completeness
      INTEGER FUNCTION SOINDEX_FOR_AMPORDERS1(ORDERS)
C     
C     This functions returns the integer index identifying the
C      amplitude split orders passed in argument which correspond to
C      the values of the following list of couplings (and in this
C      order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS1/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NAMPSO
        DO J=1,NSO
          IF (ORDERS(J).NE.AMPSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_AMPORDERS1 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping function SOINDEX_FOR_AMPORDERS1'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

